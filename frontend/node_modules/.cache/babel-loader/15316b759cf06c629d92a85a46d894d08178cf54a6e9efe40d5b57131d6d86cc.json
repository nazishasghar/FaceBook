{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nlet token = localStorage.getItem(\"token\");\nlet userData = localStorage.getItem(\"userData\");\nlet userId = localStorage.getItem(\"userId\");\nlet expirationTime = localStorage.getItem(\"expirationTime\");\nconst authInitial = {\n  token: token,\n  userData: JSON.parse(userData),\n  userId: userId,\n  expirationTime: expirationTime\n};\nconsole.log(userData);\nexport const AuthSlice = createSlice({\n  name: \"auth\",\n  initialState: authInitial,\n  reducers: {\n    login(state, action) {\n      state.token = action.payload.token;\n      state.userData = action.payload.userData;\n      state.userId = action.payload.userId;\n      state.expirationTime = action.payload.expirationTime;\n      localStorage.setItem(\"token\", action.payload.token);\n      localStorage.setItem(\"userData\", JSON.stringify(action.payload.userData));\n      localStorage.setItem(\"userId\", action.payload.userId);\n      localStorage.setItem(\"expirationTime\", action.payload.expirationTime);\n      localStorage.setItem(\"messages\", JSON.stringify(action.payload.messages));\n    },\n    logout(state) {\n      state.expirationTime = null;\n      state.token = null;\n      state.userId = null;\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"userId\");\n      localStorage.removeItem(\"expirationTime\");\n    },\n    getRequest(state, action) {\n      state.userData.Requests = action.payload.requests;\n    },\n    addFriend(state, action) {\n      state.userData.Friends.unshift(action.payload.id);\n    },\n    removeRequest(state, action) {\n      state.userData.Requests = state.userData.Requests.filter(item => item !== action.payload.id);\n    }\n  }\n});\nconst storyInitial = {\n  stories: []\n};\nexport const StoriesSlice = createSlice({\n  name: 'stories',\n  initialState: storyInitial,\n  reducers: {\n    getStories(state, action) {\n      state.stories = action.payload.stories;\n    },\n    addStories(state, action) {\n      state.stories.unshift(action.payload.createdStory);\n    }\n  }\n});\nconst postInitial = {\n  posts: []\n};\nexport const PostsSlice = createSlice({\n  name: 'posts',\n  initialState: postInitial,\n  reducers: {\n    getPosts(state, action) {\n      state.posts = action.payload.posts;\n    },\n    commentOnPost(state, action) {\n      const post = state.posts.find(item => item._id === action.payload.id);\n      if (post) {\n        post.Comments.push(action.payload.Comment);\n      }\n    },\n    likeOnPost(state, action) {\n      const post = state.posts.find(item => item._id === action.payload.id);\n      if (post) {\n        post.Likes = post.Likes + 1;\n      }\n    },\n    disLikeOnPost(state, action) {\n      const post = state.posts.find(item => item._id === action.payload.id);\n      if (post) {\n        post.Likes = post.Likes - 1;\n      }\n    },\n    deletePost(state, action) {\n      state.posts = state.posts.filter(item => item._id !== action.payload.id);\n    },\n    addPost(state, action) {\n      state.posts.unshift(action.payload.createdPost);\n    }\n  }\n});\nconst friendsState = {\n  friends: []\n};\nexport const FriendsSlice = createSlice({\n  name: 'friends',\n  initialState: friendsState,\n  reducers: {\n    getFriends(state, action) {\n      state.friends = action.payload.friends;\n    },\n    removeFriend(state, action) {\n      state.friends = state.friends.filter(item => item._id !== action.payload.id);\n    }\n  }\n});\nconst messageInitial = {\n  messages: []\n};\nexport const MessageSlice = createSlice({\n  name: 'messages',\n  initialState: messageInitial,\n  reducers: {\n    getMessages(state, action) {\n      state.messages = action.payload.messages;\n    },\n    sendMessage(state, action) {\n      state.messages.push(action.payload.message);\n    }\n  }\n});\nexport const MessageAction = MessageSlice.actions;\nexport const FriendsAction = FriendsSlice.actions;\nexport const PostAction = PostsSlice.actions;\nexport const StoryAction = StoriesSlice.actions;\nexport const AuthAction = AuthSlice.actions;","map":{"version":3,"names":["createSlice","token","localStorage","getItem","userData","userId","expirationTime","authInitial","JSON","parse","console","log","AuthSlice","name","initialState","reducers","login","state","action","payload","setItem","stringify","messages","logout","removeItem","getRequest","Requests","requests","addFriend","Friends","unshift","id","removeRequest","filter","item","storyInitial","stories","StoriesSlice","getStories","addStories","createdStory","postInitial","posts","PostsSlice","getPosts","commentOnPost","post","find","_id","Comments","push","Comment","likeOnPost","Likes","disLikeOnPost","deletePost","addPost","createdPost","friendsState","friends","FriendsSlice","getFriends","removeFriend","messageInitial","MessageSlice","getMessages","sendMessage","message","MessageAction","actions","FriendsAction","PostAction","StoryAction","AuthAction"],"sources":["/Users/nazishasghar/Projects/FaceBook/frontend/src/redux/reducer.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nlet token = localStorage.getItem(\"token\");\nlet userData: any = localStorage.getItem(\"userData\");\nlet userId = localStorage.getItem(\"userId\");\nlet expirationTime = localStorage.getItem(\"expirationTime\");\nconst authInitial = {\n  token: token,\n  userData: JSON.parse(userData),\n  userId: userId,\n  expirationTime: expirationTime,\n};\n\nconsole.log(userData)\nexport const AuthSlice = createSlice({\n  name: \"auth\",\n  initialState: authInitial,\n  reducers: {\n    login(state, action) {\n        \n      state.token = action.payload.token;\n      state.userData = action.payload.userData;\n      state.userId = action.payload.userId;\n      state.expirationTime = action.payload.expirationTime;\n      localStorage.setItem(\"token\", action.payload.token);\n      localStorage.setItem(\"userData\", JSON.stringify(action.payload.userData));\n      localStorage.setItem(\"userId\", action.payload.userId);\n      localStorage.setItem(\"expirationTime\", action.payload.expirationTime);\n      localStorage.setItem(\"messages\", JSON.stringify(action.payload.messages));\n    },\n    logout(state) {\n      state.expirationTime = null;\n      state.token = null;\n      state.userId = null;\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"userId\");\n      localStorage.removeItem(\"expirationTime\");\n    },\n    getRequest(state,action) {\n      state.userData.Requests = action.payload.requests\n    },\n    addFriend(state,action) {\n      state.userData.Friends.unshift(action.payload.id)\n    },\n    removeRequest(state,action) {\n     state.userData.Requests = state.userData.Requests.filter((item) => item !== action.payload.id)\n    }\n  },\n});\n\nconst storyInitial = {\n  stories:[]\n}\nexport const StoriesSlice = createSlice({name:'stories',initialState:storyInitial,reducers:{\n    getStories(state,action) {\n      state.stories = action.payload.stories\n    },\n    addStories(state,action) {\n      state.stories.unshift(action.payload.createdStory)\n    }\n}})\n\nconst postInitial = {\n  posts:[]\n}\nexport const PostsSlice = createSlice({name:'posts',initialState:postInitial,reducers:{\n  getPosts(state,action):any {\n    state.posts = action.payload.posts\n  },\n  commentOnPost(state,action):any {\n    const post = state.posts.find((item) => item._id === action.payload.id)\n    if (post) {\n      post.Comments.push(action.payload.Comment)\n    }\n  },\n  likeOnPost(state,action) {\n    const post = state.posts.find((item) => item._id === action.payload.id)\n    if (post) {\n      post.Likes = post.Likes + 1\n    }\n  },\n  disLikeOnPost(state,action) {\n    const post = state.posts.find((item) => item._id === action.payload.id)\n    if (post) {\n      post.Likes = post.Likes - 1\n    }\n  },\n  deletePost(state,action) {\n    state.posts = state.posts.filter((item) => item._id !== action.payload.id)\n  },\n  addPost(state,action) {\n    state.posts.unshift(action.payload.createdPost)\n  }\n}})\nconst friendsState = {\n  friends:[],\n}\nexport const FriendsSlice = createSlice({name:'friends',initialState:friendsState,reducers:{\n  getFriends(state,action) {\n    state.friends = action.payload.friends\n  },\n  removeFriend(state,action) {\n    state.friends = state.friends.filter((item) => item._id !== action.payload.id)\n  },\n}})\nconst messageInitial = {\n  messages:[]\n}\nexport const MessageSlice = createSlice({name:'messages',initialState:messageInitial,reducers: {\n    getMessages(state,action) {\n      state.messages = action.payload.messages\n    },\n    sendMessage(state,action) {\n      state.messages.push(action.payload.message)\n    }\n}})\nexport const MessageAction = MessageSlice.actions\nexport const FriendsAction = FriendsSlice.actions\nexport const PostAction = PostsSlice.actions\nexport const StoryAction = StoriesSlice.actions\nexport const AuthAction = AuthSlice.actions;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}